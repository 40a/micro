{
  "name": "Micro",
  "tagline": "A microservice toolkit",
  "body": "### What is Micro?\r\nMicro is a microservices toolkit. It provides a set of libraries and services for development and management of distributed systems. At the core, micro is simple and accessible enough that anyone can get started very quickly. As you scale to hundreds of applications, micro will provide the fundamental tools required to manage a microservice environment.\r\n\r\n### What are microservices?\r\n\r\nMicroservices is an architecture pattern used to decompose a single large application in to a smaller suite of services. Generally the goal is to create light weight services of 1000 lines of code or less. Each service alone provides a particular focused solution or set of solutions. These small services can be used as the foundational building blocks in the creation of a larger system.\r\n\r\nThe concept of microservices is not new, this is the reimagination of service orientied architecture but with an approach more holistically aligned with unix processes and pipes. For those of us with extensive experience in this field we're somewhat biased and feel this is an incredibly beneficial approach to system design at large and developer productivity.\r\n\r\n### What does Micro provide?\r\n\r\n## Features\r\n\r\nFeature\t\t|\tDescription\r\n------\t\t|\t-------\r\n[Discovery](https://godoc.org/github.com/micro/go-micro/registry) | Find running services\r\n[Client](https://godoc.org/github.com/micro/go-micro/client) | Query services via RPC\r\n[Server](https://godoc.org/github.com/micro/go-micro/server) | Listen and serve RPC requests\r\n[Pub/Sub](https://godoc.org/github.com/micro/go-micro/broker) | Publish and subscribe to events\r\n[API Gateway](https://github.com/micro/micro/tree/master/api) | Lightweight gateway/proxy. Convert http requests to rpc\r\n[CLI](https://github.com/micro/micro/tree/master/cli) | Command line interface\r\n[Sidecar](https://github.com/micro/micro/tree/master/car) | Integrate any application into the Micro ecosystem\r\n[Web UI/Proxy](https://github.com/micro/micro/tree/master/web) | A visual way to view and query services\r\n\r\n### Where do I start?\r\n\r\nCheck out some of the example services. \r\n\r\nOr start writing services now with [go-micro](https://github.com/micro/go-micro)\r\n\r\nProject\t\t|\tDescription\r\n-----\t\t|\t------\r\n[geo-srv](https://github.com/micro/geo-srv)\t|\tGeolocation tracking service using hailocab/go-geoindex\r\n[geocode-srv](https://github.com/micro/geocode-srv)\t|\tA geocoding service using the Google Geocoding API\r\n[hailo-srv](https://github.com/micro/hailo-srv)\t|\tA service for the hailo taxi service developer api\r\n[place-srv](https://github.com/micro/place-srv)\t|\tStore and retrieve places (includes Google Place Search API)\r\n[slack-srv](https://github.com/micro/slack-srv)\t|\tThe slack bot API as a go-micro RPC service\r\n[twitter-srv](https://github.com/micro/twitter-srv)\t|\tRPC for the twitter API\r\n[user-srv](https://github.com/micro/user-srv)\t|\tUser management and authentication\r\n\r\n### Authors and Contributors\r\nMicro is authored by @asim. Contributors are more than welcome. <p/>Just submit a PR!\r\n<p>\r\n\r\n### Support or Contact\r\nOpen an issue on GitHub, drop a message at <a href=\"https://twitter.com/microhq\">@microhq</a> or join the <a href=\"https://micro-services.slack.com\">slack</a>, invites yourself <a href=\"http://micro-invites.herokuapp.com/\">here</a>.",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}